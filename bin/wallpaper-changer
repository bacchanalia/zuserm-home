#!/usr/bin/perl
use strict;
use warnings;
use Time::HiRes qw(sleep);

sub setBackground($);
sub remove($@);
sub getFiles($);

my $delay = 300;
my $verbose = 1;

my @exts = qw(jpg jpeg png gif bmp);

my $usage = "Usage: $0 [-q] DIR\n";

sub main(@){
  my $verbose = 1;
  while(@_ > 0 and $_[0] =~ /^-/){
    my $arg = shift;
    if($arg =~ /^(-q)$/){
      $verbose = 0;
    }else{
      die $usage;
    }
  }

  my $dir = shift;
  die $usage if not defined $dir or @_ > 0;

  my $curFile;
  while(1){
    if(-d $dir){
      my @files = getFiles($dir);
      @files = remove $curFile, @files if defined $curFile;
      my $i = rand @files;
      $curFile = $files[$i];
      setBackground $curFile;
    }
    sleep $delay;
  }
}

sub setBackground($){
  my $file = shift;
  print "$file\n" if $verbose;
  $file =~ s/'/'\\''/g;
  my $redirect = $verbose ? '' : ">/dev/null 2>/dev/null";
  system "Esetroot '$file' $redirect";
}

sub remove($@){
  my ($elem, @arr) = @_;
  my @newArr;
  for my $e(@arr){
    push @newArr, $e unless $elem eq $e;
  }
  return @newArr;
}

sub getFiles($){
  my $dir = shift;
  my @exts = map { ("-or", "-iname", "*.$_") } @exts;
  open FH, "-|", "find", $dir, "-false", @exts;
  my @files = <FH>;
  chomp foreach @files;
  return @files;
}

&main(@ARGV);
