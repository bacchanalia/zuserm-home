#!/usr/bin/perl
use strict;
use warnings;

my @ext = qw(mkv mp4 avi wmv m2ts);

sub play($$);
sub getRandomEntry($);
sub getRandomPos($);
sub getProcLines(@);

sub main(@){
  my @dirs = @_;
  die "Usage: $0 DIR [DIR ..]\n" if @dirs == 0;
  my @cmd;
  push @cmd, "find";
  for my $dir(@dirs){
    die "\"$dir\" is not a directory\n" if not -d $dir;
    push @cmd, $dir;
  }
  push @cmd, "-false";
  for my $ext(@ext){
    push @cmd, ("-or", "-iname", "*.$ext");
  }

  my $files = getProcLines @cmd;
  chomp foreach @$files;
  while(1){
    my $file = getRandomEntry $files;
    my $pos = getRandomPos $file;
    play $file, $pos;
  }
}

sub play($$){
  my ($file, $pos) = @_;
  system "mplayer", "-ss", $pos, $file;
  if($? != 0){
    print "\nmplayer non-zero exit status, terminating\n";
    exit;
  }
}

sub getRandomEntry($){
  my $arr = shift;
  my $randIndex = rand @$arr;
  return $$arr[$randIndex];
}

sub getRandomPos($){
  my $file = shift;
  die "Could not find \"$file\"\n" if not -f $file;
  my $durLines = getProcLines "duration", "-n", "-s", $file;
  die "Error running duration on $file\n" if @$durLines != 1;
  my $dur = $$durLines[0];
  chomp $dur;

  die "Malformed duration: $dur\n" if $dur !~ /^\d+(\.\d+)?$/;
  my $pos = rand() * $dur;
  return sprintf '%.2f', $pos;
}

sub getProcLines(@){
  open FH, "-|", @_;
  my @lines = <FH>;
  close FH;
  die "Error running \"@_\"\n" if $? != 0;
  return \@lines;
}

&main(@ARGV);
