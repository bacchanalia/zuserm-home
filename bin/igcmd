#!/usr/bin/perl
use strict;
use warnings;

sub getRemoteNames();
sub getButtons($);
sub run(@);

my $igclientExec = "/usr/bin/igclient";
my $dir = "$ENV{HOME}/.config/iguana";
my $defaultChannel = "0x04";

my @remoteNames = sort `ls $dir/names 2>/dev/null`;
chomp foreach @remoteNames;
my $okRemoteNames = join "|", @remoteNames;

my %buttons = map {$_ => [getButtons $_]} @remoteNames;

my $usage = "Usage:
  $0 -h|--help
    show this message

  $0 [OPTIONS] [CMD CMD ..]

  CMD:
    <REMOTE>-<BUTTON>
    a remote and button separated with '-'

  REMOTE:
    one of $okRemoteNames

  BUTTON:
    button name for a given REMOTE
    buttons are alphanumeric plus underscore (dashes are not allowed)

    button IR codes are in:
      $dir/names/<REMOTE>/buttons/

  OPTIONS:
    -c CHANNEL | --channel=CHANNEL
      override default channel {$defaultChannel}
";

sub main(@){
  my $channel = $defaultChannel;
  while(@_ > 0 and $_[0] =~ /^-/){
    my $arg = shift;
    if($arg =~ /^(-h|--help)$/){
      print $usage;
      exit 0;
    }elsif($arg =~ /^--channel=(.*)$/){
      $channel = $1;
    }elsif($arg =~ /^-c$/ and @_ > 0){
      $channel = shift;
    }else{
      die $usage;
    }
  }

  die $usage if @_ == 0;

  my @irCodeFiles;

  my @cmds = @_;
  for my $cmd(@cmds){
    if($cmd =~ /^($okRemoteNames)-(\w+)$/){
      my ($remoteName, $button) = ($1, $2);
      my $okButtons = join "|", @{$buttons{$remoteName}};
      if($button !~ /^($okButtons)$/){
        die "$usage\nunknown button \"$button\" for remote \"$remoteName\"\n";
      }
      my $irCodeFile = "$dir/names/$remoteName/buttons/$button";
      die "missing IR code file: $irCodeFile\n" if not -f $irCodeFile;
      push @irCodeFiles, $irCodeFile;
    }else{
      die "$usage\ninvalid CMD: $cmd\n";
    }
  }

  run $igclientExec, "--set-channels=$channel", map {"--send=$_"} @irCodeFiles;
}

sub getRemoteNames(){
  my @names = `ls $dir/names 2>/dev/null`;
  chomp foreach @names;
  @names = grep {/^\w+$/} @names;
  return @names;
}

sub getButtons($){
  my $name = shift;
  my @buttons = `ls $dir/names/$name/buttons 2>/dev/null`;
  chomp foreach @buttons;
  return @buttons;
}

sub run(@){
  print "@_\n";
  system @_;
  die "\ncmd \"@_\" failed\n" if $? != 0;
}

&main(@ARGV);
