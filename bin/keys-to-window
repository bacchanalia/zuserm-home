#!/usr/bin/perl
use strict;
use warnings;

my $keysPid = undef;
$SIG{'INT'} = sub{system "kill", $keysPid; exit 0};
$SIG{'TERM'} = sub{system "kill", $keysPid; exit 0};

sub sendKeyWindow($$);
sub wmClassToWindowId($);

sub main(@){
  my $wmClass = shift;
  my $windowId = wmClassToWindowId $wmClass;

  $keysPid = open STDIN, "-|", "keys" or die "Could not run 'keys'\n";
  while(my $key = <STDIN>){
    chomp $key;
    $windowId = wmClassToWindowId $wmClass if not defined $windowId;
    sendKeyWindow $key, $windowId if defined $windowId;
  }
}

sub sendKeyWindow($$){
  my ($key, $windowId) = @_;
  my $cmd;
  if($key =~ /^[a-zA-Z0-9 `~!@#\$%^&*()\-_=+\[{\]}\\|'";:\/?.>,<]$/){
    $cmd = 'type';
  }else{
    $cmd = 'key';
  }
  system "xdotool", $cmd, "--window", $windowId, $key;
  return $? == 0 ? 1 : 0;
}

sub wmClassToWindowId($){
  my $wmClass = shift;
  my $wmctrl = `wmctrl -r $wmClass -x -v -b add,wmctrl_wants_you 2>&1`;
  $wmctrl = `wmctrl -r $wmClass -x -v -b remove,wmctrl_wants_you 2>&1`;

  if($wmctrl =~ /(0x[0-9a-f]+)/){
    return $1;
  }else{
    print STDERR "WARNING: No window found for WM_CLASS=$wmClass using wmctrl\n";
  }

  return undef;
}

&main(@ARGV);
