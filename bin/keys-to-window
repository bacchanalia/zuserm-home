#!/usr/bin/perl
use strict;
use warnings;

my $keysPid = undef;
$SIG{'INT'} = sub{system "kill", $keysPid; exit 0};
$SIG{'TERM'} = sub{system "kill", $keysPid; exit 0};

sub sendKeyWindow($$);
sub wmClassToWindowId($);

my $usage = "Usage:
  $0 WM_CLASS
    read keys from STDIN using 'keys'
    send them to the window with WM_CLASS using 'xdotool'
";

sub main(@){
  my $wmClass;
  if(@_ == 1){
    $wmClass = $_[0];
  }else{
    die $usage;
  }

  my $windowId = wmClassToWindowId $wmClass;

  $keysPid = open STDIN, "-|", "keys" or die "Could not run 'keys'\n";
  while(my $key = <STDIN>){
    chomp $key;
    my $success = 0;
    my $attempts = 3;
    while($success == 0 and $attempts > 0){
      $success = sendKeyWindow $key, $windowId if defined $windowId;
      if(not $success){
        $windowId = wmClassToWindowId $wmClass;
      }
      $attempts--;
    }
    if(not $success){
      print STDERR "\nWARNING:Could not send key '$key'\n";
    }
  }
}

sub sendKeyWindow($$){
  my ($key, $windowId) = @_;
  my $cmd;
  if($key =~ /^[a-zA-Z0-9 `~!@#\$%^&*()\-_=+\[{\]}\\|'";:\/?.>,<]$/){
    $cmd = 'type';
  }else{
    $cmd = 'key';
  }
  system "xdotool", $cmd, "--window", $windowId, $key;
  return $? == 0 ? 1 : 0;
}

sub wmClassToWindowId($){
  my $wmClass = shift;
  my $wmctrl = `wmctrl -r $wmClass -x -v -b add,wmctrl_wants_you 2>&1`;
  $wmctrl = `wmctrl -r $wmClass -x -v -b remove,wmctrl_wants_you 2>&1`;

  if($wmctrl =~ /(0x[0-9a-f]+)/){
    return $1;
  }else{
    print STDERR "WARNING: No window found for WM_CLASS=$wmClass using wmctrl\n";
  }

  return undef;
}

&main(@ARGV);
