#!/usr/bin/perl
use strict;
use warnings;

my $dbusService = "org.teleshoes.cec";

my $commands = {
  on      => "on",
  off     => "standby",
  standby => "standby",
  volup   => "volup",
  voldown => "voldown",
  mute    => "mute",
};

my $usage = "Usage:
  $0 [OPTS] CMD
     call $dbusService / command ADDRESS CMD
     sends \"<CMD> <ADDRESS>\" using cec-client
  $0 [OPTS] vol +N
     call $dbusService / volup ADDRESS N
     sends \"volup <ADDRESS>\" N times using cec-client
  $0 [OPTS] vol -N
     call $dbusService / voldown ADDRESS N
     sends \"voldown <ADDRESS>\" N times using cec-client
  $0 [OPTS] vol N
     call $dbusService / setvol ADDRESS N
     calculates the difference between 'getvol' and N, and runs vol +/- N
  $0 [OPTS] getvol
     call $dbusService / getvol ADDRESS
     send \"tx 4<ADDRESS>:71\" using cec-client
     read audio status from cec-client and calculate the volume
       {the volume is apparently the floor of S-S/5, where S is the status}
  $0 [OPTS] init
     call $dbusService / init ADDRESS
     sends \"name <ADDRESS>\" using cec-client

  OPTS:
    --av  use ADDRESS 5 {default}
    --tv  use ADDRESS 0

  CMD:
    " . (join "\n    ", map {"$_  => $$commands{$_}"} sort keys %$commands) . "
";

sub cecDbus(@);

sub main(@){
  my $addr = 5;
  while(@_ > 0 and $_[0] =~ /^(--tv|--av)$/){
    my $opt = shift;
    $addr = 0 if $opt =~ /^--tv$/;
    $addr = 5 if $opt =~ /^--av$/;
  }

  if(@_ == 1 and defined $$commands{$_[0]}){
    cecDbus "command", $addr, $$commands{$_[0]};
  }elsif(@_ == 1 and $_[0] =~ /^getvol$/){
    cecDbus "getvol", $addr;
  }elsif(@_ == 1 and $_[0] =~ /^init$/){
    cecDbus "init", $addr;
  }elsif(@_ == 2 and $_[0] =~ /^vol$/ and $_[1] =~ /^(\+|-)?(\d+)$/){
    my ($sign, $vol) = ($1, $2);
    my $cmd;
    if(not defined $sign){
      $cmd = "setvol";
    }else{
      $cmd = $sign eq "+" ? "volup" : "voldown";
    }
    cecDbus $cmd, $addr, $vol;
  }else{
    die $usage;
  }
}

sub cecDbus(@){
  my $out = `qdbus $dbusService / @_`;
  print $out;
}

&main(@ARGV);
