diff --git a/config.h.in b/config.h.in
index 309517d..e3a3de3 100644
--- a/config.h.in
+++ b/config.h.in
@@ -33,7 +33,7 @@
 /* beginning of configurable stuff ********************************** */
 
 
-#define DEFAULT_JOB_PATH "/usr/bin:/bin" /* Default PATH to use when running jobs*/
+#define DEFAULT_JOB_PATH "/bin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin" /* Default PATH to use when running jobs*/
 
 #define SENDMAIL_ARGS	 "-Ffcron", "-odi"   /* args of mail command */
 
diff --git a/fcrontab.c b/fcrontab.c
index 8f68462..6ac2a94 100644
--- a/fcrontab.c
+++ b/fcrontab.c
@@ -176,9 +176,9 @@ xexit(int exit_val)
 #ifdef HAVE_LIBPAM
     /* we need those rights for pam to close properly */
     if (geteuid() != fcrontab_uid && seteuid(fcrontab_uid) != 0)
-        die_e("could not change euid to %d", fcrontab_uid);
+        error_e("could not change euid to %d", fcrontab_uid);
     if (getegid() != fcrontab_gid && setegid(fcrontab_gid) != 0)
-        die_e("could not change egid to %d", fcrontab_gid);
+        error_e("could not change egid to %d", fcrontab_gid);
     pam_setcred(pamh, PAM_DELETE_CRED | PAM_SILENT);
     pam_end(pamh, pam_close_session(pamh, PAM_SILENT));
 #endif
diff --git a/socket.c b/socket.c
index e52c957..df2ffca 100644
--- a/socket.c
+++ b/socket.c
@@ -258,8 +258,8 @@ auth_client_getpeer(struct fcrondyn_cl *client)
     /* Successfully identified user: */
     client->fcl_user = strdup2(p_entry->pw_name);
 
-    explain("Client's pid=%d, uid=%d, gid=%d username=%s\n", cred.pid, cred.uid,
-            cred.gid, client->fcl_user);
+    //explain("Client's pid=%d, uid=%d, gid=%d username=%s\n", cred.pid, cred.uid,
+    //        cred.gid, client->fcl_user);
 
 }
 #endif                          /* HAVE_GETPEERUCRED || HAVE_GETPEEREID */
@@ -308,8 +308,8 @@ auth_client_so_peercred(struct fcrondyn_cl *client)
     /* Successfully identified user: */
     client->fcl_user = strdup2(p_entry->pw_name);
 
-    explain("Client's pid=%d, uid=%d, gid=%d username=%s\n", cred.pid, cred.uid,
-            cred.gid, client->fcl_user);
+    //explain("Client's pid=%d, uid=%d, gid=%d username=%s\n", cred.pid, cred.uid,
+    //        cred.gid, client->fcl_user);
 
 }
 #endif                          /* SO_PEERCRED */
@@ -476,9 +476,9 @@ print_line(int fd, struct cl_t *line, unsigned char *details, pid_t pid,
             ftime = localtime(&until);
             len +=
                 snprintf(buf + len, sizeof(buf) - len,
-                         " %02d/%02d/%d %02d:%02d %s", (ftime->tm_mon + 1),
+                         " %02d/%02d/%d %02d:%02d:%02d %s", (ftime->tm_mon + 1),
                          ftime->tm_mday, (ftime->tm_year + 1900),
-                         ftime->tm_hour, ftime->tm_min,
+                         ftime->tm_hour, ftime->tm_min, ftime->tm_sec,
                          (is_strict(line->cl_option)) ? "Y" : "N");
         }
         else
@@ -488,9 +488,9 @@ print_line(int fd, struct cl_t *line, unsigned char *details, pid_t pid,
     }
     if (bit_test(details, FIELD_SCHEDULE)) {
         ftime = localtime(&(line->cl_nextexe));
-        len += snprintf(buf + len, sizeof(buf) - len, " %02d/%02d/%d %02d:%02d",
+        len += snprintf(buf + len, sizeof(buf) - len, " %02d/%02d/%d %02d:%02d:%02d",
                         (ftime->tm_mon + 1), ftime->tm_mday,
-                        (ftime->tm_year + 1900), ftime->tm_hour, ftime->tm_min);
+                        (ftime->tm_year + 1900), ftime->tm_hour, ftime->tm_min, ftime->tm_sec );
     }
     len += snprintf(buf + len, sizeof(buf) - len, " %s\n", line->cl_shell);
 
diff --git a/subs.c b/subs.c
index 5a04a21..8704469 100644
--- a/subs.c
+++ b/subs.c
@@ -68,7 +68,7 @@ seteuid_safe(uid_t euid)
      * which is why we need to check if a change is needed */
 
     if (geteuid() != euid && seteuid(euid) != 0)
-        die_e("could not change euid to %d", euid);
+        error_e("could not change euid to %d", euid);
 
 }
 
@@ -81,7 +81,7 @@ setegid_safe(gid_t egid)
      * which is why we need to check if a change is needed */
 
     if (getegid() != egid && setegid(egid) != 0)
-        die_e("could not change egid to %d", egid);
+        error_e("could not change egid to %d", egid);
 
 }
 #endif                          /* def USE_SETE_ID */
