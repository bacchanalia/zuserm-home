#!/usr/bin/perl
use strict;
use warnings;

my $devDir = "/sys/devices/system/cpu/intel_pstate";
my $devices = {
  min => "$devDir/min_perf_pct",
  max => "$devDir/max_perf_pct",
  turbo => "$devDir/no_turbo",
};

my $usage = "Usage:
  $0 -g min|max
    Read value of
      $$devices{min} or
      $$devices{max}
  $0 -s min|max 0-100
    Write value to
      $$devices{min} or
      $$devices{max}
  $0 -g turbo
    Read $$devices{turbo}
    if 0, print \"on\"
    otherwise, print \"off\"
  $0 -s turbo on|off
    Write $$devices{turbo}
    If off, set to 1
    otherwise, set to 0
";

sub main(@){
  my ($cmd, $dev, $val) = (@_, undef, undef);
  $cmd = '' if not defined $cmd;
  $dev = '' if not defined $dev;
  die $usage if @_ > 3 or not defined $$devices{$dev};
  if($cmd eq '-g' and not defined $val){
    my $val = `cat $$devices{$dev}`;
    chomp $val;
    $val = $val eq "0\n" ? "on" : "off" if $dev eq 'turbo';
    print "$val\n";
  }elsif($cmd eq '-s' and defined $val){
    $val = $val eq "off" ? 1 : 0 if $dev eq 'turbo';
    my $before = `$0 -g $dev`;
    system "echo $val > $$devices{$dev}";
    my $after = `$0 -g $dev`;
    chomp $before;
    chomp $after;
    print "$before => $after\n";
  }else{
    die $usage;
  }
}

&main(@ARGV);
