#!/usr/bin/perl
use strict;
use warnings;
use lib `dirname $0 | tr -d '\n'`;
use ScriptScript;

sub addKeys();

sub main(@) {
    getRoot @_;

    print "### Adding architectures.\n";
    run qw(dpkg --add-architecture i386);

    print "### Adding keys.\n";
    addKeys();

    my $repos = relToScript "../repos";
    my $sources = "/etc/apt/sources.list.d";
    my $now = `date +%Y-%m-%dT%H%M%S`; chomp $now;
    my $backup = "$sources.$now";

    my $willSync = scalar (procLines "rsync -rlptDvn $repos/ $sources") != 4;
    if ($willSync) {
        print "### Updating repo lists.\n";
        run "mv", $sources, $backup;
        run "mkdir", $sources;
        run "rsync", "-rlptDv", "$repos/", $sources;
    } else {
        print "### Repo lists are up to date.\n";
    }

    print "### Updating repos.\n";
    run qw(apt-get update);
}

sub addKeys(){
    my %gpgKeys = readConfDir relToScript("../gpgkeys");
    for my $repo(keys %gpgKeys){
        my $gpgKey = ${$gpgKeys{$repo}}[0];
        print "### installing gpg key $repo => $gpgKey\n";
        runUser "gpg", "--keyserver", "pgpkeys.mit.edu", "--recv-key", $gpgKey;
        #runUser "gpg", "--keyserver", "keyserver.ubuntu.com", "--recv-key", $gpgKey;
        shell "gpg -a --export \"$gpgKey\" | sudo apt-key add -";
    }
}

&main(@ARGV);
